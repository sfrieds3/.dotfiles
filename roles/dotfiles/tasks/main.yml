---
- name: make ~/.config directories
  file:
    path: ~/.config
    state: directory

- name: make ~/.backups directory
  file:
    path: ~/.backup
    state: directory

- name: get list of non-symlink originals in ~/.config
  stat:
    path: "~/.config/{{ item }}"
  register: stat_config
  loop: "{{ (dotfile_config_directories + dotfile_config_files) }}"
  changed_when: stat_config.stat.exists and not stat_config.stat.islnk

- name: debug stat_config
  debug:
    var: stat_config
    verbosity: 2

- name: backup existing (non-symlink) dotfiles in ~/.config
  command:
    mv ~/.config/{{ item.0 }} ~/.backups/
    creates=~/.backups/{{ item.0 }}
    removes=~/.config/{{ item.0 }}
  loop: "{{ (dotfile_config_directories + dotfile_config_files) | zip(stat_config.results) | list }}"
  when: item.1.stat.exists and not item.1.stat.islnk
  loop_control:
    label: "{{ item.0 }}"

- name: symlink files/directories to ~/.config
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    dest: "~/.config/{{ item }}"
    state: link
  loop: "{{ (dotfile_config_directories + dotfile_config_files) }}"

- name: get list of non-symlink originals in $HOME
  stat:
    path: "~/{{ item }}"
  register: stat_home
  loop: "{{ dotfile_homedir_files }}"
  changed_when: stat_home.stat.exists and not stat_home.stat.islnk

- name: debug stat_home
  debug:
    var: stat_home
    verbosity: 2

- name: backup existing (non-symlink) dotfiles in $HOME
  command:
    mv ~/{{ item.0 }} ~/.backups/
    creates=~/.backups/{{ item.0 }}
    removes=~/{{ item.0 }}
  loop: "{{ dotfile_homedir_files | zip(stat_home.results) | list }}"
  when: item.1.stat.exists and not item.1.stat.islnk
  loop_control:
    label: "{{ item.0 }}"

- name: symlink files/directories to $HOME
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    dest: "~/.{{ item }}"
    state: link
  loop: "{{ dotfile_homedir_files }}"

- name: symlink $XDG_CONFIG_HOME/zsh/zshrc -> $XGD_CONFIG_HOME/zsh/.zshrc
  file:
    src: $XDG_CONFIG_HOME/zsh/zshrc
    dest: $XDG_CONFIG_HOME/zsh/.zshrc
    state: link

- name: make $XDG_CONFIG_HOME/fzf folder
  file:
    path: $XDG_CONFIG_HOME/fzf
    state: directory

- name: symlink fzf/completion.zsh and fzf/key-bindings.zsh to .config/fzf
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/zsh/plugins/fzf/shell/{{ item }}"
    dest: "$XDG_CONFIG_HOME/fzf/{{ item }}"
    state: link
  loop: "{{ zsh_fzf_completion }}"
