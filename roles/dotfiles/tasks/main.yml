---
- name: make $HOME/.config directories
  file:
    path: $HOME/.config
    state: directory

- name: make $HOME/.backups directory
  file:
    path: $HOME/.backups
    state: directory

- name: get list of non-symlink originals in $HOME/.config
  stat:
    path: "$HOME/.config/{{ item }}"
  register: stat_config
  loop: "{{ (dotfile_config_directories + dotfile_config_files) }}"
  changed_when: stat_config.stat.exists and not stat_config.stat.islnk

- name: debug stat_config
  debug:
    var: stat_config
    verbosity: 2

- name: backup existing (non-symlink) dotfiles in $HOME/.config
  command:
    cmd: "mv $HOME/.config/{{ item.0 }} $HOME/.backups/{{ item.0 }}.{{ ansible_date_time }}"
    creates: "$HOME/.backups/{{ item.0 }}"
    removes: "$HOME/.config/{{ item.0 }}"
  loop: "{{ (dotfile_config_directories + dotfile_config_files) | zip(stat_config.results) | list }}"
  when: item.1.stat.exists and not item.1.stat.islnk
  loop_control:
    label: "{{ item.0 }}"

- name: symlink files/directories to $HOME/.config
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    dest: "$HOME/.config/{{ item }}"
    state: link
  loop: "{{ (dotfile_config_directories + dotfile_config_files) }}"

- name: get list of non-symlink originals in $HOME
  stat:
    path: "$HOME/.{{ item }}"
  register: stat_home
  loop: "{{ dotfile_homedir_files }}"
  changed_when: stat_home.stat.exists and not stat_home.stat.islnk

- name: debug stat_home
  debug:
    var: stat_home
    verbosity: 2

- name: backup existing (non-symlink) dotfiles in $HOME
  command:
    cmd: "mv $HOME/.{{ item.0 }} $HOME/.backups/.{{ item.0 }}.{{ ansible_date_time }}"
    creates: "$HOME/.backups/{{ item.0 }}"
    removes: "$HOME/.{{ item.0 }}"
  loop: "{{ dotfile_homedir_files | zip(stat_home.results) | list }}"
  when: item.1.stat.exists and not item.1.stat.islnk
  loop_control:
    label: "{{ item.0 }}"

- name: symlink files/directories to $HOME
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}"
    dest: "$HOME/.{{ item }}"
    state: link
  loop: "{{ dotfile_homedir_files }}"

- name: zshrc -> $XGD_CONFIG_HOME/zsh/.zshrc
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/zsh/zshrc"
    dest: "$HOME/.config/zsh/.zshrc"
    state: link

- name: make $XDG_CONFIG_HOME/fzf folder
  file:
    path: "$HOME/.config/fzf"
    state: directory

- name: symlink fzf/completion.zsh and fzf/key-bindings.zsh to .config/fzf
  file:
    src: "{{ ansible_env.PWD }}/roles/dotfiles/files/zsh/plugins/fzf/shell/{{ item }}"
    path: "$HOME/.config/fzf/{{ item }}"
    state: link
  loop: "{{ zsh_fzf_completion }}"
