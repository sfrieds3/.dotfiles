- name: Install dnf packages
  become: true
  ansible.builtin.dnf:
    name:
      - '@C Development Tools and Libraries'
      - '@virtualization'
      - '@Development Tools'
      - bat
      - clang
      - clang-tools-extra
      - cmake
      - curl
      - dconf
      - eza
      - fd-find
      - fontconfig-devel
      - freetype-devel
      - fzf
      - g++
      - gcc
      - gettext
      - giflib-devel
      - gimp
      - git-core
      - gitk
      - glibc-gconv-extra
      - gnome-tweaks
      - gnutls-devel
      - gtk2-devel
      - htop
      - jansson-devel
      - java-11-openjdk-devel
      - libX11-devel
      - libXpm-devel
      - libgccjit-devel
      - libpng-devel
      - libstdc++-static
      - libtiff-devel
      - libtool
      - libvirt
      - libvterm
      - libxcb-devel
      - libxkbcommon-devel
      - llvm
      - lua
      - make
      - mise
      - nasm
      - ncurses-devel
      - ninja-build
      - perl-core
      - podman
      - podman-compose
      - podman-gvproxy
      - qemu-img
      - qemu-kvm
      - ripgrep
      - rsync
      - ruby-devel
      - shellcheck
      - sqlite
      - sqlite-devel
      - texinfo
      - util-linux-user
      - virt-install
      - virt-manager
      - zoxide
      - zsh
    state: present
- name: Ensure $XDG_CONFIG_HOME folder is created
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.config"
    state: directory
    mode: '0775'
- name: Ensure $HOME/.local/bin folder is created
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/bin"
    state: directory
    mode: '0755'
- name: Check if rust is installed
  ansible.builtin.shell: command -v rustc
  register: cargo_exists
  ignore_errors: true
  tags: rust
- name: Install Rust
  ansible.builtin.shell: set -o pipefail && curl https://sh.rustup.rs -sSf | sh -s -- -y
  when: cargo_exists is failed
