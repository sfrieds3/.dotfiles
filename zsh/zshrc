# use emacs (readline) keybindings
bindkey -e
# vim as editor
export EDITOR="nvim"

# setops
setopt INTERACTIVE_COMMENTS # allow comments even in interactive shells
setopt AUTO_CD # assume cd if directory passed
unsetopt CORRECT # try to correct spelling of commands
unsetopt CORRECT_ALL # try to correct spelling of all arguments
setopt PROMPT_SUBST # allow expansions in prompt (needed for __git_ps1)
setopt COMPLETE_IN_WORD # allow tab completion in the middle of a word

# keybindings
# search for line up/down
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search
bindkey "^[[A" up-line-or-beginning-search # Up
bindkey "^[[B" down-line-or-beginning-search # Down
bindkey "^K" up-line-or-beginning-search
bindkey "^J" down-line-or-beginning-search
bindkey '^T' history-incremental-search-backward
bindkey '^G' history-incremental-search-forward
# <S-Tab> to reverse in completion menu
bindkey '^[[Z' reverse-menu-complete
# make delete key work
bindkey "\e[3~" delete-char 

# Search backwards and forwards with a pattern
bindkey -M vicmd '/' history-incremental-pattern-search-backward
bindkey -M vicmd '?' history-incremental-pattern-search-forward

# set up for insert mode too
bindkey -M viins '^T' history-incremental-pattern-search-backward
bindkey -M viins '^G' history-incremental-pattern-search-forward

bindkey -M viins "^P" up-line-or-beginning-search              
bindkey -M viins "^N" down-line-or-beginning-search

# allow ctrl-x ctrl-e to edit command in vim
autoload edit-command-line
zle -N edit-command-line
bindkey '^X^e' edit-command-line

autoload -U colors && colors

# set prompt
autoload -U promptinit && promptinit
#prompt spaceship

# git branch and status on right prompt, if available
if [ -f $XDG_CONFIG_HOME/lib-scwfri/git/contrib/completion/git-prompt.sh ]; then
    . $XDG_CONFIG_HOME/lib-scwfri/git/contrib/completion/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=1
    GIT_PS1_SHOWSTASHSTATE=1
    GIT_PS1_SHOWUNTRACKEDFILES=1
    #PROMPT='$prompt_newline%F{cyan}%n@%m %F{white}${PWD/#$HOME/~}%f%F{blue}$(__git_ps1)%f$prompt_newline➜ '
    #PROMPT='$prompt_newline%F{red}%n %F{white}at %F{green}%m %F{white}in %F{cyan}${PWD/#$HOME/~}%f%F{blue}$(__git_ps1)%f$prompt_newline➜ '
    PROMPT='$prompt_newline%F{cyan}%n@%F{green}%m:%F{white}${PWD/#$HOME/~}%f%F{blue}$(__git_ps1) %F{red}[20%D %*]%f$prompt_newline➜ '
fi

# set gnome terminal title to user@host:pwd
DISABLE_AUTO_TITLE="true"
function precmd () {
  window_title="\033]0;$USER@$HOSTNAME: $PWD\007"
  echo -ne "$window_title"
}

# history
HISTSIZE=1000000
SAVEHIST=1000000
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
setopt SHARE_HISTORY # share history across multiple zsh sessions
setopt APPEND_HISTORY # append to history
setopt INC_APPEND_HISTORY # adds commands as they are typed, not at shell exit
setopt HIST_EXPIRE_DUPS_FIRST  # expire duplicates first
setopt HIST_IGNORE_DUPS # do not store duplications
setopt HIST_FIND_NO_DUPS #ignore duplicates when searching
setopt HIST_REDUCE_BLANKS # removes blank lines from history

# completion
autoload -Uz compinit && compinit

zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*:default' list-prompt '%S%M matches%s'

# general completion
zstyle ':completion:*' completer _complete _ignored
# partial completion suggestions
zstyle ':completion:*' list-suffixes zstyle ':completion:*' expand prefix suffix 
zstyle :compinstall filename '$HOME/.zshrc'

# required for git-completion.zsh
# git-completion.zsh -> $XDG_CONFIG_HOME/zsh/_git
zstyle ':completion:*:*:git:*' script $XDG_CONFIG_HOME/lib-scwfri/git/contrib/completion/git-completion.bash
zstyle ':completion:*:*:*:*:*' menu select
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes

# Fuzzy match mistyped completions.
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# aliases
# some more ls aliases
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

alias gg='$HOME/bin/git/git_recent.sh'
alias cdr='cd $(git rev-parse --show-toplevel)'

alias s='echo "$USER@$HOSTNAME"'
alias f="stat -c '%A %a %n'"

alias grep='grep -HPIn --exclude=tags --color=auto'
alias tmux='tmux -2'

# du -sh
alias duh='du -sh * .[^.]* 2> /dev/null | sort -h'

# handy cd aliases
alias ...='cd ../..'
alias ..='cd ..'

# disk space
alias dskspc='sudo du -h --max-depth=1 | sort -h'

# luamake
alias luamake=/home/scwfri/.cache/nvim/nlua/sumneko_lua/lua-language-server/3rd/luamake/luamake

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
