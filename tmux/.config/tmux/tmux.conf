# makes tmux send out the proper escape codes for setting the terminal title
set-option -g set-titles on
# sets the content of the title: user@host: /current/working/directory
set-option -g set-titles-string "#(echo $USER)@#H: #{pane_current_path}"

set -g default-shell /usr/bin/zsh

# rebind prefix
unbind C-b
# set -g prefix M-Space
set -g prefix C-Space

# make esc work in vim
set -s escape-time 0

# make tmux work better with vim colors
set -g default-terminal "xterm-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

# enable mouse support
set -g mouse on

# allow focus-events
set-option -g focus-events on

# use vim keys
set-window-option -g mode-keys vi

# use emacs keys in command mode
set -g status-keys emacs

# go to last window
bind-key M-Space last-window

# send commands to nested sessions
bind-key a send-prefix

# set up copy/paste
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# aggressive resize - do not limit window size
set-window-option -g aggressive-resize on

# auto rename windows based on current command
set-window-option -g automatic-rename on

# refresh 'status-left' and 'staus-right' more often
set -g status-interval 5

# display messages for 5 seconds
set -g display-time 5000

# larger history
set -g history-limit 1000000

# panes
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

### keymaps ###
# open new windows and panes in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"


# use vim keys for splits and changing panes
bind-key ^ last-window
bind -n M-h select-pane -L
bind -n M-l select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-L next-window
bind -n M-H previous-window
# direct window access
bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8
bind -n M-9 select-window -t :=9
bind -n M-0 select-window -t :=0

# kill pane
bind -n M-X kill-pane

# quick new sessions
bind C-n new-session
bind-key h display-popup -E -w 75% -h 75% "htop"
bind-key -n M-g display-popup -E "tmux new-session -A -s scratch"
bind-key -n M-t display-popup -E -w 75% -h 75% "nvim ~/todo.md"
bind-key w split-window -h -c ~/wiki 'nvim "+Telescope find-files"'
bind-key P display-popup -E "ipython || python3"

# session management
bind-key e choose-tree -swZ
# bind C-j new-window -n "session-switcher" "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t" -N 'session jumper'

# source tmux conf file (the right way)
bind-key R run-shell ' \
        tmux source-file ~/.tmux.conf > /dev/null; \
        tmux display-message "Sourced .tmux.conf!"'

# fzf switch session
bind C-j display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
    xargs tmux switch-client -t"
bind -n M-f display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
    xargs tmux switch-client -t"

# fzf kill sessions
bind K display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse -m --header=kill-session --preview 'tmux capture-pane -pt {}' |\
    xargs -I {} tmux kill-session -t {}"

# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Easily swap a pane (targeted by pane number) with the current pane
bind-key M-s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# show splits and sessions
bind s choose-tree
bind S choose-session

# window and client mappings
bind -n M-p select-window -p
bind -n M-n select-window -n
bind -n M-o select-window -l
bind -n M-P switch-client -p
bind -n M-N switch-client -n
bind -n M-O switch-client -l
bind -n M-d detach-client

# list keybindings
bind -n M-? list-keys

# windows and layouts
bind -n M-S split-window
bind -n M-a select-layout main-vertical
bind -n M-A select-layout main-horizontal

# mark and swap panes
bind -n M-m select-pane -m # mark
bind -n M-M select-pane -M # unmark
bind -n M-, swap-pane      # swap
bind -n M-< join-pane

# resize panes
# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# BEGIN vim-tmux-navigator
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l
# END vim-tmux-navigator

# statusline
source-file $XDG_CONFIG_HOME/tmux/tmux.statusline

# source tmux.local files
source-file -q $XDG_CONFIG_HOME/tmux/tmux.local
source-file -q $HOME/tmux.local
